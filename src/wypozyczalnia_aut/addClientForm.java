package wypozyczalnia_aut;

import helpers.Helpers;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static wypozyczalnia_aut.Main.controller;

public class AddClientForm extends javax.swing.JFrame {

    public static int edit_user_id;

    public AddClientForm() {
        initComponents();

        fetchClientListIntoTable();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * Fetches the client list from the controller and populates it into the
     * ClientsTable. The client list is retrieved as a list of maps containing
     * client information. The list is then converted into a two-dimensional
     * array of objects to be displayed in the table. The column names for the
     * table are predefined. Finally, the data and column names are set as the
     * model of the ClientsTable.
     */
    private void fetchClientListIntoTable() {
        List<Map<String, Object>> usersData = controller.getAllUsers();

        // Convert the list of maps to a two-dimensional array of objects (in order to display it inside ClientsTable)
        Object[][] data = new Object[usersData.size()][];
        for (int i = 0; i < usersData.size(); i++) {
            Map<String, Object> user = usersData.get(i);
            data[i] = new Object[]{
                user.get("id"),
                user.get("username"),
                user.get("email"),
                user.get("phone"),
                user.get("address"),
                user.get("firstname"),
                user.get("lastname"),
                user.get("role")
            };
        }

        // Set the data and column names as the model of the JTable
        String[] columnNames = new String[]{"ID", "Użytkownik", "Email", "Telefon", "Adres", "Imie", "Nazwisko", "Rola"};
        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        ClientsTable.setModel(model);
    }

    /**
     * Adds a new user based on the input values provided in the corresponding
     * input fields. Performs validation on the input fields to ensure that all
     * required fields are filled. Additionally, it validates the email address
     * and phone number format using helper methods. If any validation fails, an
     * appropriate error message is displayed. If all validations pass, the user
     * is registered through the controller's registerUser method. After adding
     * the user, the client list is refreshed in the table.
     */
    private void addUser() {
        Helpers helpers = new Helpers();
        String firstname = FirstnameInput.getText();
        String lastname = LastnameInput.getText();
        String username = UsernameInput.getText();
        String email = EmailInput.getText();
        String pass = PassInput.getText();
        String address = AddressInput.getText();
        String phone = PhoneInput.getText();

        if (email.isEmpty() || pass.isEmpty() || username.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || address.isEmpty() || phone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Uzupełnij wszystkie pola", "Spróbuj ponownie", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!helpers.isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Email jest niepoprawny", "Spróbuj ponownie", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!helpers.isValidPolishPhoneNumber(phone)) {
            JOptionPane.showMessageDialog(this, "Numer telefonu jest niepoprawny", "Spróbuj ponownie", JOptionPane.ERROR_MESSAGE);
            return;
        }

        controller.registerUser(this, email, pass, username, firstname, lastname, address, phone);
        fetchClientListIntoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ClientsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        FirstnameInput = new javax.swing.JTextField();
        LastnameInput = new javax.swing.JTextField();
        PassInput = new javax.swing.JTextField();
        AddressInput = new javax.swing.JTextField();
        EmailInput = new javax.swing.JTextField();
        UsernameInput = new javax.swing.JTextField();
        PhoneInput = new javax.swing.JTextField();
        EditUserBtn = new javax.swing.JButton();
        AddUserBtn = new javax.swing.JButton();
        DeleteUserBtn = new javax.swing.JButton();
        ResetUserFormBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Klienci");

        jPanel1.setBackground(new java.awt.Color(240, 240, 240));

        jPanel2.setBackground(new java.awt.Color(255, 223, 41));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Klienci w firmie");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
        );

        ClientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Imię", "Nazwisko", "Adres e-mail", "Adres", "Numer telefonu", "Wypożyczeń"
            }
        ));
        jScrollPane1.setViewportView(ClientsTable);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Wprowadź klienta");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Imię:");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Login:");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Hasło:");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Numer telefonu:");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Adres:");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Nazwisko:");

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Adres e-mail:");

        EditUserBtn.setText("Edytuj dane");
        EditUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditUserBtnActionPerformed(evt);
            }
        });

        AddUserBtn.setText("Dodaj klienta");
        AddUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserBtnActionPerformed(evt);
            }
        });

        DeleteUserBtn.setText("Usuń klienta");
        DeleteUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserBtnActionPerformed(evt);
            }
        });

        ResetUserFormBtn.setText("Wyczyść formularz");
        ResetUserFormBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetUserFormBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel8)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 4, Short.MAX_VALUE)))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AddUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddressInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PassInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PhoneInput, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(EditUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(EmailInput, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                                    .addComponent(LastnameInput)
                                    .addComponent(FirstnameInput)
                                    .addComponent(UsernameInput)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(ResetUserFormBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FirstnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LastnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UsernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PassInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddressInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PhoneInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResetUserFormBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Resets the input fields in the user form to empty values.
     */
    private void ResetUserFormBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetUserFormBtnActionPerformed
        FirstnameInput.setText("");
        LastnameInput.setText("");
        UsernameInput.setText("");
        EmailInput.setText("");
        PassInput.setText("");
        AddressInput.setText("");
        PhoneInput.setText("");
    }//GEN-LAST:event_ResetUserFormBtnActionPerformed

    /**
     * Deletes a user based on the provided user ID.
     */
    private void DeleteUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserBtnActionPerformed
        String inputValue = JOptionPane.showInputDialog("Podaj ID klienta:");
        int id = Integer.parseInt(inputValue);
        controller.deleteUser(id);
        fetchClientListIntoTable();
    }//GEN-LAST:event_DeleteUserBtnActionPerformed

    /**
     * add user handler
     *
     * @param evt
     */
    private void AddUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserBtnActionPerformed
        addUser();
    }//GEN-LAST:event_AddUserBtnActionPerformed

    /**
     * Handles the action performed when the Edit User button is clicked.
     *
     * If the button text is "Zapisz", it saves the updated user information.
     * Otherwise, it allows editing the user information by retrieving it from
     * the table based on the user ID.
     *
     * @param evt the action event that triggered the method
     * @return None
     */
    private void EditUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditUserBtnActionPerformed
        if (EditUserBtn.getText().equals("Zapisz")) {
            String firstname = FirstnameInput.getText();
            String lastname = LastnameInput.getText();
            String username = UsernameInput.getText();
            String email = EmailInput.getText();
            String pass = PassInput.getText();
            String address = AddressInput.getText();
            String phone = PhoneInput.getText();

            controller.updateUser(edit_user_id, firstname, lastname, username, email, address, phone);
            fetchClientListIntoTable();

            AddUserBtn.setEnabled(true);
            DeleteUserBtn.setEnabled(true);
            PassInput.setEnabled(true);

            // Zmieniamy tekst na przycisku Edytuj na Zapisz
            EditUserBtn.setText("Edytuj");

        } else {

            // Wyświetlamy okno dialogowe z polem tekstowym
            String inputValue = JOptionPane.showInputDialog("Podaj ID klienta:");

            // Sprawdzamy, czy wartość została wprowadzona
            if (inputValue != null && !inputValue.isEmpty()) {
                // Parsujemy wartość do liczby całkowitej
                int id = Integer.parseInt(inputValue);
                edit_user_id = id;
                // Przeszukujemy tabelę w poszukiwaniu wiersza o podanym ID
                DefaultTableModel model = (DefaultTableModel) ClientsTable.getModel();
                int rowIndex = -1;

                for (int i = 0; i < model.getRowCount(); i++) {
                    System.out.println("Comparing ID " + id + " with " + model.getValueAt(i, 0));
                    if (String.valueOf(id).equals(model.getValueAt(i, 0))) {
                        rowIndex = i;
                        break;
                    }
                }

                // Jeśli znaleziono wiersz, pobieramy dane z tabeli
                if (rowIndex >= 0) {
                    Object[] rowData = new Object[model.getColumnCount()];
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        rowData[j] = model.getValueAt(rowIndex, j);
                    }

                    // Przykładowe wykorzystanie pobranych danych
                    String username = (String) rowData[1];
                    String email = (String) rowData[2];
                    String phone = (String) rowData[3];
                    String address = (String) rowData[4];
                    String firstname = (String) rowData[5];
                    String lastname = (String) rowData[6];

                    // Wyświetlamy dane w polach tekstowych
                    FirstnameInput.setText(firstname);
                    LastnameInput.setText(lastname);
                    UsernameInput.setText(username);
                    EmailInput.setText(email);
                    AddressInput.setText(address);
                    PhoneInput.setText(phone);

                    // Wyłączamy przyciski Dodaj i Usuń
                    AddUserBtn.setEnabled(false);
                    DeleteUserBtn.setEnabled(false);
                    PassInput.setEnabled(false);

                    // Zmieniamy tekst na przycisku Edytuj na Zapisz
                    EditUserBtn.setText("Zapisz");

                } else {
                    // Jeśli nie znaleziono wiersza, wyświetlamy odpowiedni komunikat
                    JOptionPane.showMessageDialog(this, "Nie znaleziono samochodu o podanym ID", "Błąd", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_EditUserBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddClientForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddUserBtn;
    private javax.swing.JTextField AddressInput;
    private javax.swing.JTable ClientsTable;
    private javax.swing.JButton DeleteUserBtn;
    private javax.swing.JButton EditUserBtn;
    private javax.swing.JTextField EmailInput;
    private javax.swing.JTextField FirstnameInput;
    private javax.swing.JTextField LastnameInput;
    private javax.swing.JTextField PassInput;
    private javax.swing.JTextField PhoneInput;
    private javax.swing.JButton ResetUserFormBtn;
    private javax.swing.JTextField UsernameInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
